# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details

config: &config
  working_directory: /go/src/github.com/kryptn/modulario
  docker:
    - image: google/cloud-sdk:167.0.0-alpine

decrypt: &decrypt_creds
  name: Decrypt creds
  command: |
      echo $GCP_KEY > key.enc
      base64 -d key.enc > ~/key.json
      gcloud auth activate-service-account --key-file ~/key.json

install_docker: &install_docker
  name: Install Docker client
  command: |
      set -x
      VER="17.03.0-ce"
      curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
      tar -xz -C /tmp -f /tmp/docker-$VER.tgz
      mv /tmp/docker/* /usr/bin

build_backend_and_push: &build_backend_and_push
  name: Build Container
  command: |
      TAG=0.1.$CIRCLE_SHA1
      docker build -t modulario/app -f infra/Dockerfile.backend .
      docker tag modulario/app us.gcr.io/modulario-177306/app:$TAG
      docker tag modulario/app us.gcr.io/modulario-177306/app:latest
      gcloud docker -- push us.gcr.io/modulario-177306/app

build_frontend_and_push: &build_frontend_and_push
  name: Build Container
  command: |
      TAG=0.1.$CIRCLE_SHA1
      docker build -t modulario/frontend -f infra/Dockerfile.frontend .
      docker tag modulario/app us.gcr.io/modulario-177306/frontend:$TAG
      docker tag modulario/app us.gcr.io/modulario-177306/frontend:latest
      gcloud docker -- push us.gcr.io/modulario-177306/app

deploy: &deploy
  name: Deploy to Container Engine
  command: |
      if [ $CIRCLE_BRANCH == "master" ]
      then
        gcloud components install kubectl
        gcloud config set project modulario-177306
        gcloud config set compute/zone us-west1-a
        gcloud container clusters get-credentials modulario
        find ./infra -type f -exec sed -i -e "s|#MODULARIO_VERSION#|0.1.$CIRCLE_SHA1/g" {} \;
        kubectl apply -f infra/k8s/v1/
      else
        echo Not on master -- skipping deploy
      fi

version: 2.0
jobs:
  setup:
    docker:
      - image: alpine
    working_directory: /go/src/github.com/kryptn/modulario
    steps:
      - run: echo "just running"
  build-backend:
    << : *config
    steps:
      - checkout
      - run: *decrypt_creds
      - setup_remote_docker
      - run: *install_docker
      - run: *build_backend_and_push
  build-frontend:
      << : *config
      steps:
        - checkout
        - run: *decrypt_creds
        - setup_remote_docker
        - run: *install_docker
        - run: *build_frontend_and_push
  deploy:
    << : *config
    steps:
      - checkout
      - run: *decrypt_creds
      - run: *deploy

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - setup
      - build-backend:
          requires:
            - setup
          context: org-global
      - build-frontend:
          requires:
            - setup
          context: org-global
      - deploy:
          requires:
            - build-frontend
            - build-backend
          context: org-global
